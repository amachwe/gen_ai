In the last few years buzzwords such as Machine Learning (ML), Deep Learning (DL), Artificial Intelligence (AI) and Automation have taken over from the excitement of Analytics and Big Data.Often ML, DL and AI are placed in the same context especially in product and job descriptions. This not only creates confusion as to the end target, it can also lead to loss of credibility and wasted investment (e.g. in product development).Figure 1: Framework for AutomationFigure 1 shows a simplified version of the framework for automation. It shows all the required ingredients to automate the handling of a 'System'. The main components of this framework are:A system to be observed and controlled (e.g. telecoms network, supply chain, trading platform, deep space probe ...)Some way of getting data (e.g. telemetry, inventory data, market data ...) out of the system via some interface (e.g. APIs, service endpoints, USB ports, radio links ...) [Interface <1> Figure 1]A 'brain' that can effectively convert input data into some sort of actions or output data which has one or more 'models' (e.g. trained neural networks, decision trees  etc.)  that contain its 'understanding' of the system being controlled. The 'training' interface that creates the model(s) and helps maintain them, is not shown separatelySome way of getting data/commands back into the system to control it (e.g. control commands, trade transactions, purchase orders, recommendations for next action etc.) [Interface <2> Figure 1]Supervision capability which allows the 'creators' and 'maintainers' of the 'brain' to evaluate its performance and if required manually tune the system using generated data [Interface <3> Figure 1] - this itself is another Brain (see Recursive Layering)This is a so called automated 'closed-loop' system with human supervision. In such a system the control can be fully automated, only manual or any combination of the two for different types of actions. For example, in safety critical systems the automated closed loop can have cut out conditions that disables Interface <2> in Figure 1. This means all control passes to the human user (via Interface <4> in Figure 1).A Note about the BrainThe big fluffy cloud in the middle called the 'Brain' hides a lot of complexity, not in terms of the algorithms and infrastructure but in terms of even talking about differences between things like ML, DL and AI.There are two useful concepts to use when trying to put all these different buzzwords in context when it comes to the 'Brain' of the system. In other words next time some clever person tells you that there is a 'brain' in their software/hardware that learns.. ask them two questions:How old is the brain?How dense is the brain?Age of the BrainAge is a very important criteria in most tasks. Games that preschool children struggle with are 'child's play' for teenagers. Voting and driving are reserved for 'adults'. In the same way for an automated system the age of the brain talks a lot about how 'smart' it is. At its simplest a 'brain' can contain a set of unchanging rules that are applied to the observed data again and again [so called static rule based systems]. This is similar to a new born baby that has fairly well defined behaviours (e.g. hungry -> cry). This sort of a brain is pretty helpless in case the data has large variability. It will not be able to generate insights about the system being observed and the rules can quickly become error prone (thus the age old question - 'why does my baby cry all the time!').Next comes the brain of a toddler which can think and learn but in straight lines and that too after extensive training and explanations (unless you are a very 'lucky' parent and your toddler is great at solving 'problems'!). This is similar to a 'machine learning system' that is specialised to handle specific tasks. Give it a task it has not trained for and it falls apart.Next comes the brain of a pre-teen which is maturing and learning all kinds of things with or without extensive training and explanations. 'Deep learning systems' have similar properties. For example a Convolutional Neural Network (CNN) can extract features out of a raw image (such as edges) without requiring any kind of pre-processing and can be used on different types of images (generalisation).At its most complex, (e.g. a healthy adult) the 'brain' is able to not only learn new rules but more importantly evaluates existing rules for their usefulness. Furthermore, it is capable of chaining rules, applying often unrelated rules to different situations. Processing of different types of input data is also relatively easy (e.g. facial expressions, tone, gestures, alongside other data). This is what you should expect from 'artificial intelligence'. In fact with a true AI Brain you should not need Interface <4> and perhaps a very limited Interface <3> (almost a psychiatrist/psycho-analyst to a brain).Brain DensityBrain density increases as our age increases and then stops increasing and starts to decrease. From a processing perspective its like the CPU in your phone or laptop starts adding additional processors and therefore is capable of doing more complex tasks. Static rule-based systems may not require massive computational power.  Here more processing power may be required for <1>/<2>. to prepare the data for input and output.Machine-learning algorithms definitely benefit from massive computational powers especially when the 'brain' is being trained. Once the model is trained however, the application of the model may not require computing power. Again more power may be required to massage the data to fit the model parameters than to actually use the model.Deep-learning algorithms require computational power throughout the cycle of prep, train and use. The training and use times are massively reduced when using special purpose hardware (e.g. GPUs for Neural Networks).  One rule of thumb: 'if it doesn't need special purpose hardware then its probably not a real deep-learning brain, it may simply be a machine learning algorithm pretending to be a deep-learning brain'. CPUs are mostly good for the data prep tasks before and after the 'brain' has done its work.Analytics SystemIf we were to have only interfaces <1> and <3> (see Figure 1) - we can call it an analytics solution. This type of system has no ability to influence the system. It is merely an observer. This is very popular especially on the business support side. Here the interface <4> may not be something tangible (such REST API or a command console) all the time. Interface <4> might represent strategic and tactical decisions. The 'Analytics' block in this case consists of data visualisation and user interface components.True AutomationTo enable true automation we must close the loop (i.e. Interface <2> must exist). But there is something that I have not shown in Figure 1 which is important for true automation. This missing item is the ability to process event-based data. This is very important especially for systems that are time dependent - real-time or near-real-time - such as trading systems, network orchestrators etc. This is shown in Figure 2.Figure 2: Automation and different types of data flowsNote: Events are not only generated by the System being controlled but also by the 'Brain'. Therefore, the 'Brain' must be capable of handling both time dependent as well as time independent data. It should also be able to generate commands that are time dependent as well as time independent. Recursive LayersRecursive Layering is a powerful concept where an architecture allows for its implementations to be layered on top of each other. This is possible with ML, DL and AI components. The System in Figures 1 and 2 can be another combination of a Brain and controlled System where the various outputs are being fed in to another Brain (super-brain? supervisor brain?). An example is shown in Figure 3. This is a classic Analytics over ML example where the 'Analytics' block from Figure 1 and 2 has a Brain inside it (it is not just restricted to visualisation and UI). It may be a simple new-born brain (e.g. static SQL data processing queries) or a sophisticated deep learning system.Figure 3: Recursive layering in ML, DL and AI systems.The Analytics feed is another API point that can be an input data source (Interface <1>) to another 'Brain' that is say supervising the one that is generating the analytics data.ConclusionSo next time you get a project that involves automation (implementing or using) - think about the interfaces and components shown in Figure 1. Think about what type of brain do you need (age and density). If you are on the product side then make sure bold claims are made, not illogical or blatantly false ones. Just as you would not ask a toddler to do a teenagers job, don't advertise one as the other. Finally think hard about how the users will be included in the automation loop. What conditions will disable interface <2> in Figure 1 and cut out to manual control? How can the users monitor the 'Brain'? Fully automated - closed loop systems are not good for anyone (just ask John Connor from the Terminator series or people from Knight Capital https://en.wikipedia.org/wiki/Knight_Capital_Group). Humans often provide deeper insights based on practical experience and knowledge than ML or DL is capable of. 